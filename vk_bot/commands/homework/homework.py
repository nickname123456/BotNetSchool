from database.methods.get import get_chat_by_vk_id, get_homework, get_student_by_vk_id
import ns

from vkbottle.bot import Message, Blueprint
from misc.VKRules import PayloadStarts

import logging


bp = Blueprint('homework') # –û–±—ä—è–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
bp.labeler.custom_rules["PayloadStarts"] = PayloadStarts




@bp.on.private_message(PayloadStarts='{"cmd":"homework_')
async def private_homework(message: Message):
    logging.info(f'{message.peer_id}: I get homework')
    userId = message.from_id # ID —é–∑–µ—Ä–∞
    student = get_student_by_vk_id(userId)

    if (await bp.state_dispenser.get(message.from_id)): 
        if message.from_id == (await bp.state_dispenser.get(message.from_id)).peer_id:
            await bp.state_dispenser.delete(message.from_id) # –£–¥–∞–ª—è–µ–º —Ü–µ–ø–æ—á–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏–π

    lessons = await ns.getSubjectsId(
        student.login,
        student.password,
        student.school,
        student.link,
        student.studentId
    )

    lessonId = message.payload[17:-2]
    lesson = [lesson for lesson in lessons if lessons[lesson] == lessonId][0]
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∑
    homework = get_homework(lesson, student.school, student.clas)

    if homework:
        await message.answer(f'üìö–£—Ä–æ–∫: {lesson} \nüÜô–ë—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {homework.upd_date} \nüí¨–ó–∞–¥–∞–Ω–∏–µ: {homework.homework}')
        logging.info(f'{message.peer_id}: Send homework')
    else:
        await message.answer('‚ùå–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∞ —ç—Ç–æ—Ç —É—Ä–æ–∫ –µ—â–µ –Ω–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è. \n‚ò∫–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –º–æ–∂–µ—Ç–µ —Å–∞–º–∏ –µ–≥–æ –∑–∞–ø–∏—Å–∞—Ç—å. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å"')



@bp.on.chat_message(PayloadStarts='{"cmd":"homework_')
async def chat_homework(message: Message):
    logging.info(f'{message.peer_id}: I get homework')
    chat_id = message.chat_id
    chat = get_chat_by_vk_id(chat_id)

    lessons = await ns.getSubjectsId(
        chat.login,
        chat.password,
        chat.school,
        chat.link,
        chat.studentId
    )

    lessonId = message.payload[17:-2]
    lesson = [lesson for lesson in lessons if lessons[lesson] == lessonId][0]

    # –ü–æ–ª—É—á–∞–µ–º –¥–∑
    homework = get_homework(lesson, chat.school, chat.clas)

    if homework:
        await message.answer(f'üìö–£—Ä–æ–∫: {lesson} \nüÜô–ë—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {homework.upd_date} \nüí¨–ó–∞–¥–∞–Ω–∏–µ: {homework.homework}')
        logging.info(f'{message.peer_id}: Send homework')
    else:
        await message.answer('‚ùå–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∞ —ç—Ç–æ—Ç —É—Ä–æ–∫ –µ—â–µ –Ω–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è. \n‚ò∫–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –º–æ–∂–µ—Ç–µ —Å–∞–º–∏ –µ–≥–æ –∑–∞–ø–∏—Å–∞—Ç—å. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å"')
from database.methods.get import get_chat_by_vk_id, get_homework, get_student_by_vk_id
from ns import get_diary, get_week
from settings import weekDays
import netschoolapi

from vkbottle import Keyboard, KeyboardButtonColor, Text
from vkbottle.bot import Message, Blueprint
from misc.VKRules import PayloadStarts

import logging
import datetime

bp = Blueprint('homework_for_day')# –û–±—ä—è–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
bp.labeler.custom_rules["PayloadStarts"] = PayloadStarts




@bp.on.private_message(payload={'cmd': 'keyboard_homework_for_day'})
async def keyboard_homework_for_day(message: Message):
    logging.info(f'{message.peer_id}: I get keyboard_homework_for_day')
    userId = message.from_id
    student = get_student_by_vk_id(userId)
    week = get_week()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω–∏–∫
    diary = await get_diary(
        student.login,
        student.password,
        week,
        student.school,
        student.link,
        student.studentId
    )

    # –ü–µ—Ä–µ–±–∏—Ä–∞–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = Keyboard()
    day_number = 0
    for day in diary['weekDays']:
        for i in weekDays:
            if (datetime.datetime.strptime(day['date'], '%Y-%m-%dT%H:%M:%S') - datetime.datetime.strptime(diary['weekStart'], '%Y-%m-%dT%H:%M:%S')).days == i:
                keyboard.add(Text(weekDays[i], {"cmd": f"homework_for_day_{day_number}"}))
                keyboard.row()
        day_number += 1
    keyboard.add(Text("–ù–∞–∑–∞–¥", {'cmd': 'keyboard_homework'}), color=KeyboardButtonColor.NEGATIVE)

    await message.answer('ü§î–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ?', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I send keyboard_homework_for_day')

@bp.on.chat_message(payload={'cmd': 'keyboard_homework_for_day'})
async def keyboard_homework_for_day(message: Message):
    logging.info(f'{message.peer_id}: I get keyboard_homework_for_day')
    chatId = message.chat_id
    chat = get_chat_by_vk_id(chatId)
    week = get_week()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω–∏–∫
    diary = await get_diary(
        chat.login,
        chat.password,
        week,
        chat.school,
        chat.link,
        chat.studentId
    )

    # –ü–µ—Ä–µ–±–∏—Ä–∞–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = Keyboard()
    day_number = 0
    for day in diary['weekDays']:
        for i in weekDays:
            if (datetime.datetime.strptime(day['date'], '%Y-%m-%dT%H:%M:%S') - datetime.datetime.strptime(diary['weekStart'], '%Y-%m-%dT%H:%M:%S')).days == i:
                keyboard.add(Text(weekDays[i], {"cmd": f"homework_for_day_{day_number}"}))
                keyboard.row()
        day_number += 1
    keyboard.add(Text("–ù–∞–∑–∞–¥", {'cmd': 'keyboard_homework'}), color=KeyboardButtonColor.NEGATIVE)

    await message.answer('ü§î–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ?', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I send keyboard_homework_for_day')





@bp.on.private_message(PayloadStarts='{"cmd":"homework_for_day_')
async def private_homework_for_day(message: Message):
    logging.info(f'{message.peer_id}: I get homework_for_day')
    userId = message.from_id # ID —é–∑–µ—Ä–∞
    student = get_student_by_vk_id(userId)
    week = get_week() 
    day = int(message.payload[25:-2])

    try:
        diary = await get_diary( # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω–∏–∫
            student.login,
            student.password,
            week,
            student.school,
            student.link,
            student.studentId
        )
        logging.info(f'{message.peer_id}: Get diary in NetSchool')
    except netschoolapi.errors.AuthError:
        await message.answer('‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!')
        logging.info(f'{message.peer_id}: Incorrect login or password!')
        return

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —É—Ä–æ–∫–∏
    for lesson in diary['weekDays'][day]['lessons']:
        lesson = lesson['subjectName']

        # –ü–æ–ª—É—á–∞–µ–º –¥–∑
        homework = get_homework(lesson, student.school, student.clas)
        if homework:
            await message.answer(f'üìö–£—Ä–æ–∫: {lesson} \nüÜô–ë—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {homework.upd_date} \nüí¨–ó–∞–¥–∞–Ω–∏–µ: {homework.homework}')
            logging.info(f'{message.peer_id}: Send homework')

    await message.answer('‚ùó–í–Ω–∏–º–∞–Ω–∏–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–µ –≤—Å–µ —É—Ä–æ–∫–∏. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—Ä—É—á–Ω—É—é –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –î/–ó –ø–æ –æ—Å—Ç–∞–≤—à–∏–º—Å—è —É—Ä–æ–∫–∞–º.')
    logging.info(f'{message.peer_id}: I send homework_for_day')





@bp.on.chat_message(PayloadStarts='{"cmd":"homework_for_day_')
async def chat_homework_for_day(message: Message):
    logging.info(f'{message.peer_id}: I get homework_for_day')
    chatId = message.chat_id # ID —á–∞—Ç–∞
    chat = get_chat_by_vk_id(chatId)
    week = get_week() 
    day = int(message.payload[25:-2])

    try:
        diary = await get_diary( # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω–∏–∫
            chat.login,
            chat.password,
            week,
            chat.school,
            chat.link,
            chat.studentId
        )
        logging.info(f'{message.peer_id}: Get diary in NetSchool')
    except netschoolapi.errors.AuthError:
        await message.answer('‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!')
        logging.info(f'{message.peer_id}: Incorrect login or password!')
        return

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —É—Ä–æ–∫–∏
    for lesson in diary['weekDays'][day]['lessons']:
        lesson = lesson['subjectName']

        # –ü–æ–ª—É—á–∞–µ–º –¥–∑
        homework = get_homework(lesson, chat.school, chat.clas)
        if homework:
            await message.answer(f'üìö–£—Ä–æ–∫: {lesson} \nüÜô–ë—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {homework.upd_date} \nüí¨–ó–∞–¥–∞–Ω–∏–µ: {homework.homework}')
            logging.info(f'{message.peer_id}: Send homework')

    await message.answer('‚ùó–í–Ω–∏–º–∞–Ω–∏–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–µ –≤—Å–µ —É—Ä–æ–∫–∏. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—Ä—É—á–Ω—É—é –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –î/–ó –ø–æ –æ—Å—Ç–∞–≤—à–∏–º—Å—è —É—Ä–æ–∫–∞–º.')
    logging.info(f'{message.peer_id}: I send homework_for_day')
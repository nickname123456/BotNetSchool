from database.methods.get import get_chat_by_vk_id, get_student_by_vk_id
import ns

from vkbottle import Keyboard, KeyboardButtonColor, Text
from vkbottle.bot import Message, Blueprint
from misc.VKRules import PayloadStarts

import logging


bp = Blueprint('parentReport') # –û–±—ä—è–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
bp.on.vbml_ignore_case = True # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π
bp.labeler.custom_rules["PayloadStarts"] = PayloadStarts



@bp.on.private_message(payload={'cmd': 'parentReport'})
async def private_parentReport(message: Message):
    logging.info(f'{message.peer_id}: I get parentReport')
    user_id = message.from_id # ID —é–∑–µ—Ä–∞
    student = get_student_by_vk_id(user_id)
    
    terms = await ns.getTerms( # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∏–º–µ—Å—Ç—Ä—ã/—á–µ—Ç–≤–µ—Ä—Ç–∏
        student.login,
        student.password,
        student.school,
        student.link,
        student.studentId
    )

    keyboard = Keyboard()
    for i in terms.keys(): # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Ç—Ä–∏–º–µ—Å—Ç—Ä—ã/—á–µ—Ç–≤–µ—Ä—Ç–∏
        keyboard.add(Text(i, {'cmd': f'parentReport_{terms[i]}'}), color=KeyboardButtonColor.SECONDARY)
        keyboard.row()
    keyboard.add(Text('–ù–∞–∑–∞–¥', {'cmd': 'reports'}), color=KeyboardButtonColor.NEGATIVE)

    await message.answer('üëÜüèª–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∏–º–µ—Å—Ç—Ä/—á–µ—Ç–≤–µ—Ä—Ç—å', keyboard=keyboard)

@bp.on.chat_message(payload={'cmd': 'parentReport'})
async def chat_parentReport(message: Message):
    logging.info(f'{message.peer_id}: I get parentReport')
    # –ê–π–¥–∏ —á–∞—Ç–∞:
    chat_id = message.chat_id
    chat = get_chat_by_vk_id(chat_id)
    
    terms = await ns.getTerms( # –ü–æ–ª—É—á–∞–µ–º —Ç—Ä–∏–º–µ—Å—Ç—Ä—ã/—á–µ—Ç–≤–µ—Ä—Ç–∏
        chat.login,
        chat.password,
        chat.school,
        chat.link,
        chat.studentId
    )

    keyboard = Keyboard()
    for i in terms.keys(): # –ø–µ—Ä–µ–±–∏—Ä–∞–µ–º —Ç—Ä–∏–º–µ—Å—Ç—Ä—ã/—á–µ—Ç–≤–µ—Ä—Ç–∏
        keyboard.add(Text(i, {'cmd': f'parentReport_{terms[i]}'}), color=KeyboardButtonColor.SECONDARY)
        keyboard.row()
    keyboard.add(Text('–ù–∞–∑–∞–¥', {'cmd': 'reports'}), color=KeyboardButtonColor.NEGATIVE)

    await message.answer('üëÜüèª–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–∏–º–µ—Å—Ç—Ä/—á–µ—Ç–≤–µ—Ä—Ç—å', keyboard=keyboard)
    
    
    


@bp.on.private_message(PayloadStarts='{"cmd":"parentReport_')
async def private_parentReport_with_term(message: Message):
    logging.info(f'{message.peer_id}: I get parentReport with term')
    user_id = message.from_id # ID —é–∑–µ—Ä–∞
    student = get_student_by_vk_id(user_id)

    termId = message.payload[21:-2] # ID —Ç—Ä–∏–º–µ—Å—Ç—Ä–∞/—á–µ—Ç–≤–µ—Ä—Ç–∏
    
    parentReport = await ns.getParentReport( # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á—ë—Ç
        student.login,
        student.password,
        student.school,
        student.link,
        student.studentId,
        termId
    )
    for i in parentReport:
        await message.answer(i)
    logging.info(f'{message.peer_id}: I sent parentReport')


@bp.on.chat_message(PayloadStarts='{"cmd":"parentReport_')
async def chat_parentReport_with_term(message: Message):
    logging.info(f'{message.peer_id}: I get parentReport with term')
    # –ê–π–¥–∏ —á–∞—Ç–∞:
    chat_id = message.chat_id
    chat = get_chat_by_vk_id(chat_id)
    
    termId = message.payload[21:-2] # ID —Ç—Ä–∏–º–µ—Å—Ç—Ä–∞/—á–µ—Ç–≤–µ—Ä—Ç–∏
    
    parentReport = await ns.getParentReport( # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç
        chat.login,
        chat.password,
        chat.school,
        chat.link,
        chat.studentId,
        termId
    )
    for i in parentReport:
        await message.answer(i)
    logging.info(f'{message.peer_id}: I sent parentReport')
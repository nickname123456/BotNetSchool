from vkbottle.bot import Message
from vkbottle import Keyboard, KeyboardButtonColor, Text
from vkbottle.bot import Blueprint
from sqlighter import SQLighter
from ns import get_next_period, get_back_period, get_period
import logging


bp = Blueprint('keyboard_diary')# –û–±—ä—è–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
db = SQLighter('database.db') # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö


@bp.on.message(payload={'cmd': 'keyboard_diary'})
async def keyboard_diary(message: Message):
    userInfo = await bp.api.users.get(message.from_id)# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —é–∑–µ—Ä–µ
    logging.info(f'{message.peer_id}: I get keyboard diary')

    db.edit_account_week(userInfo[0].id, 0)# –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –Ω–µ–¥–µ–ª—é, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —é–∑–µ—Ä

    keyboard = (
        Keyboard()
        #–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É
        .add(Text('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', {"cmd": "diary_for_day"}))
        #–ù–∞—á–∞—Ç—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        .row()
        .add(Text('–í—Ç–æ—Ä–Ω–∏–∫', {'cmd': 'diary_for_day'}))
        .row()
        .add(Text('–°—Ä–µ–¥–∞', {'cmd': 'diary_for_day'}))
        .row()
        .add(Text('–ß–µ—Ç–≤–µ—Ä–≥', {'cmd': 'diary_for_day'}))
        .row()
        .add(Text('–ü—è—Ç–Ω–∏—Ü–∞', {'cmd': 'diary_for_day'}))
        .row()
        .add(Text('‚óÄ', {'cmd': 'keyboard_diary_back'}))
        .add(Text("–ù–∞–∑–∞–¥", {'cmd': 'menu'}), color=KeyboardButtonColor.NEGATIVE)
        .add(Text('‚ñ∂', {'cmd': 'keyboard_diary_next'}))
    )

    await message.answer(f'–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è: \n{get_period()[0]}\n-\n{get_period()[1]} \n–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I send keyboard diary')




@bp.on.message(payload={'cmd': 'keyboard_diary_back'})
async def keyboard_diary(message: Message):
    userInfo = await bp.api.users.get(message.from_id)# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —é–∑–µ—Ä–µ
    logging.info(f'{message.peer_id}: I get keyboard diary')

    db.edit_account_week(userInfo[0].id, -1)# –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –Ω–µ–¥–µ–ª—é, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —é–∑–µ—Ä

    keyboard = (
        Keyboard()
        #–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É
        .add(Text('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', {"cmd": "back_diary_for_day"}))
        #–ù–∞—á–∞—Ç—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        .row()
        .add(Text('–í—Ç–æ—Ä–Ω–∏–∫', {'cmd': 'back_diary_for_day'}))
        .row()
        .add(Text('–°—Ä–µ–¥–∞', {'cmd': 'back_diary_for_day'}))
        .row()
        .add(Text('–ß–µ—Ç–≤–µ—Ä–≥', {'cmd': 'back_diary_for_day'}))
        .row()
        .add(Text('–ü—è—Ç–Ω–∏—Ü–∞', {'cmd': 'back_diary_for_day'}))
        .row()
        .add(Text('üü¶', {'cmd': ''}))
        .add(Text("–ù–∞–∑–∞–¥", {'cmd': 'menu'}), color=KeyboardButtonColor.NEGATIVE)
        .add(Text('‚ñ∂', {'cmd': 'keyboard_diary'}))
    )

    await message.answer(f'–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è: \n{get_back_period()[0]}\n-\n{get_back_period()[1]} \n–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I send back keyboard diary')



@bp.on.message(payload={'cmd': 'keyboard_diary_next'})
async def keyboard_diary(message: Message):
    userInfo = await bp.api.users.get(message.from_id)# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —é–∑–µ—Ä–µ
    logging.info(f'{message.peer_id}: I get keyboard diary')

    db.edit_account_week(userInfo[0].id, 1)# –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –Ω–µ–¥–µ–ª—é, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —é–∑–µ—Ä

    keyboard = (
        Keyboard()
        #–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É
        .add(Text('–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', {"cmd": "next_diary_for_day"}))
        #–ù–∞—á–∞—Ç—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        .row()
        .add(Text('–í—Ç–æ—Ä–Ω–∏–∫', {'cmd': 'next_diary_for_day'}))
        .row()
        .add(Text('–°—Ä–µ–¥–∞', {'cmd': 'next_diary_for_day'}))
        .row()
        .add(Text('–ß–µ—Ç–≤–µ—Ä–≥', {'cmd': 'next_diary_for_day'}))
        .row()
        .add(Text('–ü—è—Ç–Ω–∏—Ü–∞', {'cmd': 'next_diary_for_day'}))
        .row()
        .add(Text('‚óÄ', {'cmd': 'keyboard_diary'}))
        .add(Text("–ù–∞–∑–∞–¥", {'cmd': 'menu'}), color=KeyboardButtonColor.NEGATIVE)
        .add(Text('üü¶'))
    )

    await message.answer(f'–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è: \n{get_next_period()[0]}\n-\n{get_next_period()[1]} \n–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ?', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I send next keyboard diary')
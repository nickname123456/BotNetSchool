from ns import get_back_week, get_next_week, get_week, get_diary
from vkbottle import Keyboard, KeyboardButtonColor, Text
from vkbottle.bot import Blueprint, Message
from PostgreSQLighter import db
import netschoolapi
import logging
from VKRules import PayloadStarts


bp = Blueprint('diary_for_day') # –û–±—ä—è–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
bp.labeler.custom_rules["PayloadStarts"] = PayloadStarts


@bp.on.private_message(PayloadStarts=['{"cmd":"next_diary_for_day', 
    '{"cmd":"back_diary_for_day', 
    '{"cmd":"diary_for_day'])
async def private_diary_for_day(message: Message):
    logging.info(f'{message.peer_id}: I get diary for day')
    userId = message.from_id # ID —é–∑–µ—Ä–∞

    # –ï—Å–ª–∏ —É —á–µ–ª–æ–≤–µ–∫–∞ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å
    if db.get_account_correctData(userId) != 1:
        await message.answer('‚ùå–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã! \nü§î–ù–∞–ø–∏—à–∏—Ç–µ "–ù–∞—á–∞—Ç—å" \n‚ùå–ò–ª–∏ —É –≤–∞—Å –Ω–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å')
        logging.info(f'{message.peer_id}: User not found in db')
        return

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    if message.payload.startswith('{"cmd":"diary_for_day_'):
        week = get_week()
        day = int(message.payload[22:-2])
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø—Ä–µ–¥—ã–¥—É—â—É—é –Ω–µ–¥–µ–ª—é
    elif message.payload.startswith('{"cmd":"back_diary_for_day_'):
        week = get_back_week()
        day = int(message.payload[27:-2])
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
    elif message.payload.startswith('{"cmd":"next_diary_for_day_'):    
        week = get_next_week()
        day = int(message.payload[27:-2])
    
    try:
        diary = await get_diary( # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω–∏–∫
            db.get_account_login(userId),
            db.get_account_password(userId),
            week,
            db.get_account_school(userId),
            db.get_account_link(userId),
            db.get_account_studentId(userId)
        )
        logging.info(f'{message.peer_id}: Get diary from NetSchool')
    except netschoolapi.errors.AuthError:
        await message.answer('‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!')
        logging.info(f'{message.peer_id}: Incorrect login or password!')
        return

    for lesson in diary['weekDays'][day]['lessons']:
        marks = ''
        homework_sgo = ''
        homework_db = ''
        try:
            homework_db = db.get_homework(
                db.get_account_school(userId),
                db.get_account_class(userId),
                lesson['subjectName']
            )
        except: pass

        if 'assignments' in lesson:
            for i in lesson['assignments']:
                #–ï—Å–ª–∏ –æ—Ü–µ–Ω–∫–∞ –Ω–µ —Ä–∞–≤–Ω–∞ –ø—É—Å—Ç–æ—Ç–µ, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–µ
                if 'mark' in i:
                    marks += str(i['mark']['mark']) + ' '

                #–ï—Å–ª–∏ —Ç–∏–ø –∑–∞–¥–∞–Ω–∏–µ = –¥–∑, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º
                if i['typeId'] == 3:
                    homework_sgo = i['assignmentName']
                else:
                    # –ï–°–ª–∏ –Ω–µ—Ç –¥–∑:
                    if homework_sgo == '':
                        homework_sgo = '–Ω–µ –∑–∞–¥–∞–Ω–æ'

        await message.answer(f"""
üìö–ü—Ä–µ–¥–º–µ—Ç: {lesson['subjectName']}
üîé–ö–∞–±–∏–Ω–µ—Ç: {lesson['room']}
üìÖ–í—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —É—Ä–æ–∫–∞: {lesson['startTime']} - {lesson['endTime']}
üí¨–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–µ –∏–∑ –°–ì–û: {homework_sgo}
üí¨–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥/–∑ –∏–∑ –±–∞–∑—ã –ë–æ—Ç–∞ (–æ–±–Ω–æ–≤–ª—è–ª–∏ —Å–∞–º–∏ —É—á–µ–Ω–∏–∫–∏): {homework_db}
üí¢–û—Ü–µ–Ω–∫–∞: {marks}
        """)
        logging.info(f'{message.peer_id}: Send lesson information')








@bp.on.chat_message(PayloadStarts=['{"cmd":"next_diary_for_day', 
    '{"cmd":"back_diary_for_day', 
    '{"cmd":"diary_for_day'])
async def chat_diary_for_day(message: Message):
    logging.info(f'{message.peer_id}: I get diary for day')
    chat_id = message.chat_id

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    if message.payload.startswith('{"cmd":"diary_for_day_'):
        week = get_week()
        day = int(message.payload[22:-2])
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø—Ä–µ–¥—ã–¥—É—â—É—é –Ω–µ–¥–µ–ª—é
    elif message.payload.startswith('{"cmd":"back_diary_for_day_'):
        week = get_back_week()
        day = int(message.payload[27:-2])
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
    elif message.payload.startswith('{"cmd":"next_diary_for_day_'):    
        week = get_next_week()
        day = int(message.payload[27:-2])
    
    try:
        diary = await get_diary(
            db.get_chat_login(chat_id),
            db.get_chat_password(chat_id),
            week,
            db.get_chat_school(chat_id),
            db.get_chat_link(chat_id),
            db.get_chat_studentId(chat_id)
        )
        logging.info(f'{message.peer_id}: Get diary from NetSchool')
    except netschoolapi.errors.AuthError:
        await message.answer('‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!')
        logging.info(f'{message.peer_id}: Incorrect login or password!')
        return


    for lesson in diary['weekDays'][day]['lessons']:
        marks = ''
        homework_sgo = ''
        homework_db = ''
        try:
            homework_db = db.get_homework(
                db.get_account_school(chat_id),
                db.get_account_class(chat_id),
                lesson['subjectName']
            )
        except: pass

        if 'assignments' in lesson:
            for i in lesson['assignments']:
                #–ï—Å–ª–∏ –æ—Ü–µ–Ω–∫–∞ –Ω–µ —Ä–∞–≤–Ω–∞ –ø—É—Å—Ç–æ—Ç–µ, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–µ
                if 'mark' in i:
                    marks += str(i['mark']['mark']) + ' '

                #–ï—Å–ª–∏ —Ç–∏–ø –∑–∞–¥–∞–Ω–∏–µ = –¥–∑, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º
                if i['typeId'] == 3:
                    homework_sgo = i['assignmentName']
                else:
                    # –ï–°–ª–∏ –Ω–µ—Ç –¥–∑:
                    if homework_sgo == '':
                        homework_sgo = '–Ω–µ –∑–∞–¥–∞–Ω–æ'

        await message.answer(f"""
üìö–ü—Ä–µ–¥–º–µ—Ç: {lesson['subjectName']}
üîé–ö–∞–±–∏–Ω–µ—Ç: {lesson['room']}
üìÖ–í—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —É—Ä–æ–∫–∞: {lesson['startTime']} - {lesson['endTime']}
üí¨–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–µ –∏–∑ –°–ì–û: {homework_sgo}
üí¨–ü–æ—Å–ª–µ–¥–Ω–µ–µ –¥/–∑ –∏–∑ –±–∞–∑—ã –ë–æ—Ç–∞ (–æ–±–Ω–æ–≤–ª—è–ª–∏ —Å–∞–º–∏ —É—á–µ–Ω–∏–∫–∏): {homework_db}
üí¢–û—Ü–µ–Ω–∫–∞: {marks}
        """)
        logging.info(f'{message.peer_id}: Send lesson information')
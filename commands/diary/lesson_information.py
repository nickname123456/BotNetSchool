from ns import get_back_week, get_next_week, get_week, get_diary
from vkbottle.bot import Message, Blueprint
from PostgreSQLighter import db
import logging
from VKRules import PayloadStarts



bp = Blueprint('diary_for_day')# –û–±—ä—è–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
bp.labeler.custom_rules["PayloadStarts"] = PayloadStarts


@bp.on.private_message(PayloadStarts=['{"cmd":"lesson_information_',
    '{"cmd":"next_lesson_information_',
    '{"cmd":"back_lesson_information_'])
async def private_lesson_information(message: Message):
    logging.info(f'{message.peer_id}: I get lesson information')
    userId = message.from_id # ID —é–∑–µ—Ä–∞

    day = db.get_account_day(userId) # –ü–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —é–∑–µ—Ä

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø—Ä–µ–¥—ã–¥—É—â—É—é –Ω–µ–¥–µ–ª—é
    if 'back_' in message.payload:
        week = get_back_week()
        lesson = message.payload[32:-2]

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
    elif 'next_' in message.payload:
        week = get_next_week()
        lesson = message.payload[32:-2]

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    else:
        week = get_week()
        lesson = message.payload[27:-2]
    
    db.edit_account_lesson(userId, lesson) # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä —É—Ä–æ–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —é–∑–µ—Ä
    db.commit()
    
    diary = await get_diary( # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω–∏–∫
        db.get_account_login(userId),
        db.get_account_password(userId),
        week,
        db.get_account_school(userId),
        db.get_account_link(userId),
        db.get_account_studentId(userId))
    logging.info(f'{message.peer_id}: Get diary')
    
    lesson = diary['weekDays'][day]['lessons'][int(lesson)] # –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–∫

    marks = ''
    homework = ''

    if 'assignments' in lesson:
        for i in lesson['assignments']:
            #–ï—Å–ª–∏ –æ—Ü–µ–Ω–∫–∞ –Ω–µ —Ä–∞–≤–Ω–∞ –ø—É—Å—Ç–æ—Ç–µ, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–µ
            if 'mark' in i:
                marks += str(i['mark']['mark']) + ' '

            #–ï—Å–ª–∏ —Ç–∏–ø –∑–∞–¥–∞–Ω–∏–µ = –¥–∑, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º
            if i['typeId'] == 3:
                homework = i['assignmentName']
            else:
                # –ï–°–ª–∏ –Ω–µ—Ç –¥–∑:
                if homework == '':
                    homework = '–Ω–µ –∑–∞–¥–∞–Ω–æ'

    await message.answer(f"""
üìö–ü—Ä–µ–¥–º–µ—Ç: {lesson['subjectName']}
üîé–ö–∞–±–∏–Ω–µ—Ç: {lesson['room']}
üìÖ–í—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —É—Ä–æ–∫–∞: {lesson['startTime']} - {lesson['endTime']}
üí¨–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–µ: {homework}
üí¢–û—Ü–µ–Ω–∫–∞: {marks}
    """)
    logging.info(f'{message.peer_id}: Send lesson information')






@bp.on.chat_message(PayloadStarts=['{"cmd":"lesson_information_',
    '{"cmd":"next_lesson_information_',
    '{"cmd":"back_lesson_information_'])
async def chat_lesson_information(message: Message):
    logging.info(f'{message.peer_id}: I get lesson information')
    chat_id = message.chat_id

    day = db.get_chat_day(chat_id) # –ü–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —é–∑–µ—Ä

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –ø—Ä–µ–¥—ã–¥—É—â—É—é –Ω–µ–¥–µ–ª—é
    if 'back_' in message.payload:
        week = get_back_week()
        lesson = message.payload[32:-2]

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é
    elif 'next_' in message.payload:
        week = get_next_week()
        lesson = message.payload[32:-2]

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
    else:
        week = get_week()
        lesson = message.payload[27:-2]
    
    db.edit_chat_lesson(chat_id, lesson) # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä —É—Ä–æ–∫–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —é–∑–µ—Ä
    db.commit()
    
    diary = await get_diary(
        db.get_chat_login(chat_id),
        db.get_chat_password(chat_id),
        week,
        db.get_chat_school(chat_id),
        db.get_chat_link(chat_id),
        db.get_chat_studentId(chat_id))
    logging.info(f'{message.peer_id}: Get diary')
    
    lesson = diary['weekDays'][day]['lessons'][int(lesson)]

    marks = ''
    homework = ''

    if 'assignments' in lesson:
        for i in lesson['assignments']:
            #–ï—Å–ª–∏ –æ—Ü–µ–Ω–∫–∞ –Ω–µ —Ä–∞–≤–Ω–∞ –ø—É—Å—Ç–æ—Ç–µ, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –µ–µ
            if 'mark' in i:
                marks += str(i['mark']['mark']) + ' '

            #–ï—Å–ª–∏ —Ç–∏–ø –∑–∞–¥–∞–Ω–∏–µ = –¥–∑, —Ç–æ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º
            if i['typeId'] == 3:
                homework = i['assignmentName']
            else:
                # –ï–°–ª–∏ –Ω–µ—Ç –¥–∑:
                if homework == '':
                    homework = '–Ω–µ –∑–∞–¥–∞–Ω–æ'

    await message.answer(f"""
üìö–ü—Ä–µ–¥–º–µ—Ç: {lesson['subjectName']}
üîé–ö–∞–±–∏–Ω–µ—Ç: {lesson['room']}
üìÖ–í—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —É—Ä–æ–∫–∞: {lesson['startTime']} - {lesson['endTime']}
üí¨–î–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–µ: {homework}
üí¢–û—Ü–µ–Ω–∫–∞: {marks}
    """)
    logging.info(f'{message.peer_id}: Send lesson information')
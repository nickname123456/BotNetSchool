from database.methods.get import get_chat_by_vk_id, get_student_by_vk_id
from ns import get_marks

from vkbottle import Keyboard, KeyboardButtonColor, Text
from vkbottle.bot import Message, Blueprint

import logging


bp = Blueprint('correction_mark_choice_lesson') # –û–±—ä—è–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
bp.on.vbml_ignore_case = True # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π



@bp.on.private_message(payload={'cmd': 'correction_mark_choice_lesson'})
async def correction_mark_choice_lesson(message: Message):
    logging.info(f'{message.peer_id}: I get correction_mark_choice_lesson')
    user_id = message.from_id # ID —é–∑–µ—Ä–∞
    student = get_student_by_vk_id(user_id)

    keyboard = Keyboard()
    lessons = await get_marks( # –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–∫–∏
        student.login,
        student.password,
        student.school,
        student.link,
        student.studentId,
        onlySubjects= True
    )

    counter = 0
    for i in lessons: # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —É—Ä–æ–∫–∏
        if counter % 4 == 0: # –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–æ–∫–µ —É–∂–µ 4 —É—Ä–æ–∫–∞, —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥ —Å—Ç—Ä–æ–∫—É
            keyboard.row()
        keyboard.add(Text(i[:40], {"cmd": f"correction_choice_mark_{counter}"}))
        counter += 1
    
    keyboard.row()
    keyboard.add(Text('–ù–∞–∑–∞–¥', {"cmd": "marks"}), KeyboardButtonColor.NEGATIVE)

    await message.answer('ü§î–ö–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å?', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I sent correction_mark_choice_lesson')




@bp.on.chat_message(payload={'cmd': 'correction_mark_choice_lesson'})
async def correction_mark_choice_lesson(message: Message):
    logging.info(f'{message.peer_id}: I get correction_mark_choice_lesson')
    # –ê–π–¥–∏ —á–∞—Ç–∞:
    chat_id = message.chat_id
    chat = get_chat_by_vk_id(chat_id)

    keyboard = Keyboard()
    lessons = await get_marks( # –ü–æ–ª—É—á–∞–µ–º —É—Ä–æ–∫–∏
        chat.login,
        chat.password,
        chat.school,
        chat.link,
        chat.studentId,
        onlySubjects= True
    )

    counter = 0
    for i in lessons: # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —É—Ä–æ–∫–∏
        if counter % 4 == 0: # –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–æ–∫–µ —É–∂–µ 4 —É—Ä–æ–∫–∞, —Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥ —Å—Ç—Ä–æ–∫—É
            keyboard.row()
        keyboard.add(Text(i[:40], {"cmd": f"correction_choice_mark_{counter}"}))
        counter += 1
    
    keyboard.row()
    keyboard.add(Text('–ù–∞–∑–∞–¥', {"cmd": "marks"}), KeyboardButtonColor.NEGATIVE)

    await message.answer('ü§î–ö–∞–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø—Ä–∞–≤–∏—Ç—å?', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I sent correction_mark_choice_lesson')
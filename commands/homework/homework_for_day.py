from vkbottle.bot import Message, Blueprint
from vkbottle import Keyboard, KeyboardButtonColor, Text
import logging
from PostgreSQLighter import db
from ns import get_diary, get_week
import netschoolapi
from settings import lessons_and_their_reduction
from settings import weekDays
from VKRules import PayloadStarts


bp = Blueprint('homework_for_day')# –û–±—ä—è–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
bp.labeler.custom_rules["PayloadStarts"] = PayloadStarts




@bp.on.private_message(payload={'cmd': 'keyboard_homework_for_day'})
async def keyboard_homework_for_day(message: Message):
    logging.info(f'{message.peer_id}: I get keyboard_homework_for_day')
    userId = message.from_id
    week = get_week()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω–∏–∫
    diary = await get_diary(
        db.get_account_login(userId),
        db.get_account_password(userId),
        week,
        db.get_account_school(userId),
        db.get_account_link(userId),
        db.get_account_studentId(userId)
    )

    # –ü–µ—Ä–µ–±–∏—Ä–∞–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = Keyboard()
    day_number = 0
    for day in diary['weekDays']:
        for i in weekDays:
            if int(str(day['date'])[8:-9]) - int(str(week[0])[8:]) == i:
                keyboard.add(Text(weekDays[i], {"cmd": f"homework_for_day_{day_number}"}))
                keyboard.row()
        day_number += 1
    keyboard.add(Text("–ù–∞–∑–∞–¥", {'cmd': 'keyboard_homework'}), color=KeyboardButtonColor.NEGATIVE)

    await message.answer('ü§î–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ?', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I send keyboard_homework_for_day')

@bp.on.chat_message(payload={'cmd': 'keyboard_homework_for_day'})
async def keyboard_homework_for_day(message: Message):
    logging.info(f'{message.peer_id}: I get keyboard_homework_for_day')
    chatId = message.chat_id
    week = get_week()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω–∏–∫
    diary = await get_diary(
        db.get_chat_login(chatId),
        db.get_chat_password(chatId),
        week,
        db.get_chat_school(chatId),
        db.get_chat_link(chatId),
        db.get_chat_studentId(chatId)
    )

    # –ü–µ—Ä–µ–±–∏—Ä–∞–º –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –∏ —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = Keyboard()
    day_number = 0
    for day in diary['weekDays']:
        for i in weekDays:
            if int(str(day['date'])[8:-9]) - int(str(week[0])[8:]) == i:
                keyboard.add(Text(weekDays[i], {"cmd": f"homework_for_day_{day_number}"}))
                keyboard.row()
        day_number += 1
    keyboard.add(Text("–ù–∞–∑–∞–¥", {'cmd': 'keyboard_homework'}), color=KeyboardButtonColor.NEGATIVE)

    await message.answer('ü§î–ù–∞ –∫–∞–∫–æ–π –¥–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ?', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I send keyboard_homework_for_day')





@bp.on.private_message(PayloadStarts='{"cmd":"homework_for_day_')
async def private_homework_for_day(message: Message):
    logging.info(f'{message.peer_id}: I get homework_for_day')
    userId = message.from_id # ID —é–∑–µ—Ä–∞
    week = get_week() 
    day = int(message.payload[25:-2])

    try:
        diary = await get_diary( # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω–∏–∫
            db.get_account_login(userId),
            db.get_account_password(userId),
            week,
            db.get_account_school(userId),
            db.get_account_link(userId),
            db.get_account_studentId(userId)
        )
        logging.info(f'{message.peer_id}: Get diary in NetSchool')
    except netschoolapi.errors.AuthError:
        await message.answer('‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!')
        logging.info(f'{message.peer_id}: Incorrect login or password!')
        return

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —É—Ä–æ–∫–∏
    for lesson in diary['weekDays'][day]['lessons']:
        lesson = lesson['subjectName']

        if lesson in lessons_and_their_reduction: lesson = lessons_and_their_reduction[lesson]

        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∑
            homework = db.get_homework(
                db.get_account_school(userId),
                db.get_account_class(userId),
                lesson
            )

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∑
            upd_date = db.get_upd_date(
                db.get_account_school(userId),
                db.get_account_class(userId),
                lesson
            )
        except:
            logging.exception(f'{message.peer_id}: Exception occurred')
            continue

        await message.answer(f'üìö–£—Ä–æ–∫: {lesson} \nüÜô–ë—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {upd_date} \nüí¨–ó–∞–¥–∞–Ω–∏–µ: {homework}')
        logging.info(f'{message.peer_id}: Send homework')

    await message.answer('‚ùó–í–Ω–∏–º–∞–Ω–∏–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–µ –≤—Å–µ —É—Ä–æ–∫–∏. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—Ä—É—á–Ω—É—é –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –î/–ó –ø–æ –æ—Å—Ç–∞–≤—à–∏–º—Å—è —É—Ä–æ–∫–∞–º.')
    logging.info(f'{message.peer_id}: I send homework_for_day')





@bp.on.chat_message(PayloadStarts='{"cmd":"homework_for_day_')
async def chat_homework_for_day(message: Message):
    logging.info(f'{message.peer_id}: I get homework_for_day')
    chatId = message.chat_id # ID —é–∑–µ—Ä–∞
    week = get_week() 
    day = int(message.payload[25:-2])

    try:
        diary = await get_diary( # –ü–æ–ª—É—á–∞–µ–º –¥–Ω–µ–≤–Ω–∏–∫
            db.get_chat_login(chatId),
            db.get_chat_password(chatId),
            week,
            db.get_chat_school(chatId),
            db.get_chat_link(chatId),
            db.get_chat_studentId(chatId)
        )
        logging.info(f'{message.peer_id}: Get diary in NetSchool')
    except netschoolapi.errors.AuthError:
        await message.answer('‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!')
        logging.info(f'{message.peer_id}: Incorrect login or password!')
        return

    # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —É—Ä–æ–∫–∏
    for lesson in diary['weekDays'][day]['lessons']:
        lesson = lesson['subjectName']

        if lesson in lessons_and_their_reduction: lesson = lessons_and_their_reduction[lesson]

        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∑
            homework = db.get_homework(
                db.get_chat_school(chatId),
                db.get_chat_class(chatId),
                lesson
            )

            # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∑
            upd_date = db.get_upd_date(
                db.get_chat_school(chatId),
                db.get_chat_class(chatId),
                lesson
            )
        except:
            logging.exception(f'{message.peer_id}: Exception occurred')
            continue

        await message.answer(f'üìö–£—Ä–æ–∫: {lesson} \nüÜô–ë—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {upd_date} \nüí¨–ó–∞–¥–∞–Ω–∏–µ: {homework}')
        logging.info(f'{message.peer_id}: Send homework')

    await message.answer('‚ùó–í–Ω–∏–º–∞–Ω–∏–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–µ –≤—Å–µ —É—Ä–æ–∫–∏. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—Ä—É—á–Ω—É—é –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –î/–ó –ø–æ –æ—Å—Ç–∞–≤—à–∏–º—Å—è —É—Ä–æ–∫–∞–º.')
    logging.info(f'{message.peer_id}: I send homework_for_day')
from database.methods.get import get_student_by_vk_id, get_chat_by_vk_id
from netschoolapi import NetSchoolAPI

from vkbottle import Keyboard, KeyboardButtonColor, Text
from vkbottle.bot import Message, Blueprint

import logging


bp = Blueprint('menu')# –û–±—ä—è–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É
bp.on.vbml_ignore_case = True # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä




#–ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ "–ú–µ–Ω—é" –∏–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É
@bp.on.private_message(text=["–ú–µ–Ω—é", '/menu', '/vty.', '/–º–µ–Ω—é'])
@bp.on.private_message(payload={'cmd': 'menu'})
async def private_menu(message: Message):
    logging.info(f'{message.peer_id}: I get menu')
    user_id = message.from_id

    student = get_student_by_vk_id(user_id)
    try:
        api = NetSchoolAPI(student.link) # –õ–æ–≥–∏–Ω–∏–º—Å—è –≤ –°–ì–û
        await api.login(
            student.login, 
            student.password, 
            student.school,
            student.studentId
        )
    except:
        logging.exception(f'{message.peer_id}: Exception occurred')
        await message.answer('‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!\n ü§î–ù–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –Ω–∞–ø–∏—Å–∞—Ç—å "–ù–∞—á–∞—Ç—å", –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')
        return

    settings = await api.userInfo()
    await api.logout()
    name = settings['–ò–º—è']

    #–°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = (
        Keyboard()
        #–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏
        .add(Text('–í–æ–π—Ç–∏', {'cmd': 'login'}), color=KeyboardButtonColor.POSITIVE)
        #–ù–∞—á–∞—Ç—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        .row()
        .add(Text('–î–Ω–µ–≤–Ω–∏–∫', {'cmd': 'keyboard_diary'}), color=KeyboardButtonColor.SECONDARY)
        .add(Text('–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ', {'cmd': 'keyboard_homework'}), color=KeyboardButtonColor.SECONDARY)
        .row()
        .add(Text('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', {'cmd': 'keyboard_schedule'}), color=KeyboardButtonColor.SECONDARY)
        .add(Text('–û–±—ä—è–≤–ª–µ–Ω–∏—è', {'cmd': 'announcements'}), color=KeyboardButtonColor.SECONDARY)
        .add(Text('–û—Ç—á–µ—Ç—ã', {'cmd': 'reports'}), color=KeyboardButtonColor.SECONDARY)
        .row()
        .add(Text('üîÅ', {'cmd': 'change_anything_kb'}), color=KeyboardButtonColor.SECONDARY)
        .add(Text(f'{name}', {'cmd': 'information'}), color=KeyboardButtonColor.PRIMARY)
        .add(Text('‚öô', {'cmd': 'keyboard_settings'}), color=KeyboardButtonColor.SECONDARY)
    )

    #–û—Ç–≤–µ—Ç –≤ —á–∞—Ç
    await message.answer('–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I sent menu')




#–ï—Å–ª–∏ –Ω–∞–ø–∏—Å–∞–ª–∏ "–ú–µ–Ω—é" –∏–ª–∏ –Ω–∞–∂–∞–ª–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É
@bp.on.chat_message(text=["–ú–µ–Ω—é", '/menu', '/vty.', '/–º–µ–Ω—é'])
@bp.on.chat_message(payload={'cmd': 'menu'})
async def chat_menu(message: Message):
    logging.info(f'{message.peer_id}: I get menu')
    # –ê–π–¥–∏ —á–∞—Ç–∞:
    chat_id = message.chat_id

    chat = get_chat_by_vk_id(chat_id)
    try:
        api = NetSchoolAPI(chat.link) # –õ–æ–≥–∏–Ω–∏–º—Å—è –≤ –°–ì–û
        await api.login(
            chat.login, 
            chat.password, 
            chat.school,
            chat.studentId
        )
    except:
        logging.exception(f'{message.peer_id}: Exception occurred')
        await message.answer('‚ùå–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å!\n ü§î–ù–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é –Ω–∞–ø–∏—Å–∞—Ç—å "–ù–∞—á–∞—Ç—å", –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')
        return

    settings = await api.userInfo()
    await api.logout()
    name = settings['–ò–º—è']

    #–°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = (
        Keyboard()
        #–î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏
        .add(Text('–í–æ–π—Ç–∏', {'cmd': 'login'}), color=KeyboardButtonColor.POSITIVE)
        #–ù–∞—á–∞—Ç—å —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
        .row()
        .add(Text('–î–Ω–µ–≤–Ω–∏–∫', {'cmd': 'keyboard_diary'}), color=KeyboardButtonColor.SECONDARY)
        .add(Text('–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ', {'cmd': 'keyboard_homework'}), color=KeyboardButtonColor.SECONDARY)
        .row()
        .add(Text('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', {'cmd': 'keyboard_schedule'}), color=KeyboardButtonColor.SECONDARY)
        .add(Text('–û–±—ä—è–≤–ª–µ–Ω–∏—è', {'cmd': 'announcements'}), color=KeyboardButtonColor.SECONDARY)
        .add(Text('–û—Ç—á–µ—Ç—ã', {'cmd': 'reports'}), color=KeyboardButtonColor.SECONDARY)
        .row()
        .add(Text('üîÅ', {'cmd': 'change_anything_kb'}), color=KeyboardButtonColor.SECONDARY)
        .add(Text(f'{name}', {'cmd': 'information'}), color=KeyboardButtonColor.PRIMARY)
        .add(Text('‚öô', {'cmd': 'keyboard_settings'}), color=KeyboardButtonColor.SECONDARY)
    )

    #–û—Ç–≤–µ—Ç –≤ —á–∞—Ç
    await message.answer('–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.', keyboard=keyboard)
    logging.info(f'{message.peer_id}: I sent menu')
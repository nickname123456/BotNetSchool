from aiogram.types import Message, CallbackQuery
from aiogram import Dispatcher

from database.methods.get import get_chat_by_telegram_id, get_homework, get_student_by_telegram_id
from netschoolapi import netschoolapi
from tg_bot.keyboards import get_homework_kb
import ns

import logging

async def private_homework(message: Message, callback=None):
    if isinstance(message, CallbackQuery):
        callback = message
        message = message.message
    logging.info(f'{message.chat.id}: get homework command')
    userId = message.chat.id
    student = get_student_by_telegram_id(userId)

    try:
        lessons = await ns.getSubjectsId(
            student.login,
            student.password,
            student.school,
            student.link,
            student.studentId)
    except netschoolapi.errors.AuthError:
        await message.answer('‚ùå–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å')
        logging.info(f'{message.chat.id}: wrong login or password')
        return    
    lessonId = callback.data[9:]
    lesson = [lesson for lesson in lessons if lessons[lesson] == lessonId][0]

    # –ü–æ–ª—É—á–∞–µ–º –¥–∑
    homework = get_homework(lesson, student.school, student.clas)
    logging.info(f'{message.chat.id}: get homework for {lesson}')

    if homework:
        await message.edit_text(f'üìö–£—Ä–æ–∫: {lesson} \nüÜô–ë—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {homework.upd_date} \nüí¨–ó–∞–¥–∞–Ω–∏–µ: {homework.homework}')
    else:
        await message.edit_text('‚ùå–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∞ —ç—Ç–æ—Ç —É—Ä–æ–∫ –µ—â–µ –Ω–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è. \n‚ò∫–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –º–æ–∂–µ—Ç–µ —Å–∞–º–∏ –µ–≥–æ –∑–∞–ø–∏—Å–∞—Ç—å. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å"')
    await message.edit_reply_markup(get_homework_kb(lessons))
    logging.info(f'{message.chat.id}: send homework')


async def chat_homework(message: Message, callback=None):
    if isinstance(message, CallbackQuery):
        callback = message
        message = message.message
    logging.info(f'{message.chat.id}: get homework command')
    chatId = message.chat.id
    chat = get_chat_by_telegram_id(chatId)

    try:
        lessons = await ns.getSubjectsId(
            chat.login,
            chat.password,
            chat.school,
            chat.link,
            chat.studentId)
    except netschoolapi.errors.AuthError:
        await message.answer('‚ùå–ù–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å')
        logging.info(f'{message.chat.id}: wrong login or password')
        return    
    lessonId = callback.data[9:]
    lesson = [lesson for lesson in lessons if lessons[lesson] == lessonId][0]

    # –ü–æ–ª—É—á–∞–µ–º –¥–∑
    homework = get_homework(lesson, chat.school, chat.clas)
    logging.info(f'{message.chat.id}: get homework for {lesson}')

    if homework:
        await message.edit_text(f'üìö–£—Ä–æ–∫: {lesson} \nüÜô–ë—ã–ª–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {homework.upd_date} \nüí¨–ó–∞–¥–∞–Ω–∏–µ: {homework.homework}')
    else:
        await message.edit_text('‚ùå–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –Ω–∞ —ç—Ç–æ—Ç —É—Ä–æ–∫ –µ—â–µ –Ω–µ—Ç –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è. \n‚ò∫–ù–æ –≤—ã –º–æ–∂–µ—Ç–µ –º–æ–∂–µ—Ç–µ —Å–∞–º–∏ –µ–≥–æ –∑–∞–ø–∏—Å–∞—Ç—å. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–±–Ω–æ–≤–∏—Ç—å"')
    await message.edit_reply_markup(get_homework_kb(lessons))
    logging.info(f'{message.chat.id}: send homework')






def register_homework_handlers(dp: Dispatcher):
    dp.register_callback_query_handler(private_homework, lambda c: c.data.startswith('homework_'), chat_type='private')
    
    dp.register_callback_query_handler(chat_homework, lambda c: c.data.startswith('homework_'), chat_type='group')
from aiogram.types import Message, CallbackQuery
from aiogram import Dispatcher

import logging


async def private_keyboard_diary(message: Message, callback=None):
    if isinstance(message, CallbackQuery):
        callback = message
        message = callback.message
    logging.info(f'{message.chat.id}: I get diary')
    await message.answer("üôÑ–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∞–¥–º–∏–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–¥–µ–ª–∞–µ—Ç —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ.. \nüòò–ù–æ —Å–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–∏ –∑–∞–π—Ç–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫ —á–µ—Ä–µ–∑ <a href='https://vk.com/botnetschool'>–í–ö –±–æ—Ç–∞</a>", disable_web_page_preview=True)
    logging.info(f'{message.chat.id}: I sent diary')


async def chat_keyboard_diary(message: Message, callback=None):
    if isinstance(message, CallbackQuery):
        callback = message
        message = callback.message
    logging.info(f'{message.chat.id}: I get diary')
    await message.answer("üôÑ–ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –∞–¥–º–∏–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–¥–µ–ª–∞–µ—Ç —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –∏ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ.. \nüòò–ù–æ —Å–µ–π—á–∞—Å –≤—ã –º–æ–∂–µ—Ç–∏ –∑–∞–π—Ç–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫ —á–µ—Ä–µ–∑ <a href='https://vk.com/botnetschool'>–í–ö –±–æ—Ç–∞</a>", disable_web_page_preview=True)
    logging.info(f'{message.chat.id}: I sent diary')

    


def register_keyboard_diary_handlers(dp: Dispatcher):
    dp.register_message_handler(private_keyboard_diary, content_types=['text'], text=['üìñ–î–Ω–µ–≤–Ω–∏–∫', '–î–Ω–µ–≤–Ω–∏–∫', '–¥–Ω–µ–≤–Ω–∏–∫', '/diary'], state='*', chat_type='private')
    dp.register_message_handler(chat_keyboard_diary, content_types=['text'], text=['üìñ–î–Ω–µ–≤–Ω–∏–∫', '–î–Ω–µ–≤–Ω–∏–∫', '–¥–Ω–µ–≤–Ω–∏–∫', '/diary'], state='*', chat_type=['group', 'supergroup'])
    
    dp.register_callback_query_handler(private_keyboard_diary, lambda c: c.data == 'keyboard_diary', state='*', chat_type='private')
    dp.register_callback_query_handler(chat_keyboard_diary, lambda c: c.data == 'keyboard_diary', state='*', chat_type=['group', 'supergroup'])